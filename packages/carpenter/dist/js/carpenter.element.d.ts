import '@fontsource/poppins';
import '@lotsof/json-schema-form';
import __LitElement from '@lotsof/lit-element';
import { PropertyValues } from 'lit';
import '../../src/css/output/carpenter.build.css';
import { TCarpenterAdapter, TCarpenterComponent, TCarpenterMediaQuery, TCarpenterNotification, TCarpenterState } from '../shared/carpenter.type.js';
export default class CarpenterElement extends __LitElement {
    mediaQueries: Record<string, TCarpenterMediaQuery>;
    mediaQuery: string;
    adapter?: TCarpenterAdapter | string;
    selectedComponent?: TCarpenterComponent;
    preselectedComponent?: TCarpenterComponent | null;
    darkModeClass: string;
    loaded?: Function;
    uiMode: string;
    _notifications: TCarpenterNotification[];
    _currentMediaQuery: string;
    _currentAction: 'saveValues' | null;
    protected _state: TCarpenterState;
    private _components;
    private _$iframe?;
    private _$canvas?;
    private _$daemon?;
    private _$jsonSchemaForm?;
    constructor();
    private static _adapters;
    static registerAdapter(id: string, adapter: TCarpenterAdapter): void;
    get currentMediaQuery(): TCarpenterMediaQuery | undefined;
    update(changedProperties: any): void;
    get $iframeDocument(): Document | null | undefined;
    get $iframe(): HTMLIFrameElement | undefined;
    protected firstUpdated(_changedProperties: PropertyValues): void;
    mount(): Promise<void>;
    private _initDaemonListeners;
    private _initListeners;
    private _initEnvironment;
    private _setSelectedComponent;
    private _setPreselectedComponent;
    private _setIframeContent;
    private _updateIframeSize;
    private _applyUpdate;
    private _renderEditor;
    _renderTree(): any;
    render(): import("lit-html").TemplateResult<1>;
}
