import '@fontsource/poppins';
import '@lotsof/carpenter';
import '@lotsof/json-schema-form';
import __LitElement from '@lotsof/lit-element';
import { PropertyValues } from 'lit';
import '../../src/css/output/carpenter.build.css';
import { TCarpenterCmsComponent, TCarpenterCmsNotification, TCarpenterCmsSpecs, TCarpenterCmsState } from '../shared/carpenterCms.type.js';
export default class CarpenterCmsElement extends __LitElement {
    src: string;
    commandPanelHotkey: string;
    darkModeClass: string;
    specs: TCarpenterCmsSpecs;
    _notifications: TCarpenterCmsNotification[];
    _selectedComponent: TCarpenterCmsComponent | null;
    _selectedComponentId: string | undefined;
    _preselectedComponentId: string | undefined;
    _components: Record<string, TCarpenterCmsComponent>;
    _currentAction: 'saveValues' | null;
    _showEditor: boolean;
    protected _state: TCarpenterCmsState;
    private _$commandPanelSelect;
    private _$carpenter;
    constructor();
    get currentEngine(): string | undefined;
    get selectedComponent(): TCarpenterCmsComponent;
    get selectedComponentId(): string | undefined;
    get preselectedComponent(): TCarpenterCmsComponent | null;
    get preselectedComponentId(): string | undefined;
    get componentsToRender(): string[] | undefined;
    showEditor(): void;
    hideUi(): void;
    private _fetchSpecs;
    protected firstUpdated(_changedProperties: PropertyValues): void;
    mount(): Promise<void>;
    private _initCommandPanel;
    private _initListeners;
    private _initEnvironment;
    private _initComponents;
    private _postComponent;
    setComponent(pathOrId: string, newComponent: TCarpenterCmsComponent): void;
    getComponent(pathOrId: string): TCarpenterCmsComponent;
    selectComponent(id: string, engine?: string): void;
    toggleUiMode(): void;
    private _restoreUiMode;
    setUiMode(mode: 'light' | 'dark'): void;
    randomizeComponentValues(id?: string | undefined): void;
    private _saveComponentValues;
    private _handleCommandPanelSelect;
    private _sendNotification;
    private _renderTopbar;
    private _renderCommandPanel;
    private _renderNotifications;
    private _renderSaveValuesForm;
    private _renderEditor;
    render(): import("lit-html").TemplateResult<1>;
}
