@import './typo.rhythm.css';

.typo-h1,
.typo-h2,
.typo-h3,
.typo-h4,
.typo-h5,
.typo-format h1,
.typo-format h2,
.typo-format h3,
.typo-format h4,
.typo-format h5 {
  word-break: break-all;
}

.typo-h1,
.typo-format h1 {
  font-weight: 100 !important;
  @s-typo (h1);
}

.typo-h2,
.typo-format h2 {
  @s-typo (h2);
}

.typo-h3,
.typo-format h3 {
  color: s-color(accent);
  @s-typo (h3);
}

.typo-p,
.typo-format p {
  @s-typo (p);

  &:empty {
    display: none;
  }
}

.typo-lead,
.typo-lead > p,
.typo-format .typo-lead,
.typo-format .typo-lead p {
  @s-typo (lead);
}

.typo-code,
.typo-format code {
  @include code;
}

.typo-a,
.typo-format a {
  color: s-color(accent);
}

.typo-strong,
.typo-format strong {
  font-weight: normal;
  color: s-color(accent);
}

.typo-em,
.typo-format em {
  font-weight: normal;
  color: s-color(accent);
}

.typo-ul,
.typo-format ul,
.typo-ol,
.typo-format ol {
  > li {
    position: relative;
    padding-left: s-space(8);
    margin-bottom: s-space(5);

    &:before {
      position: absolute;
      top: 0;
      left: 0;
      color: s-color(accent);
    }
  }
}
.typo-ul,
.typo-format ul {
  > li {
    &:before {
      content: 'â€¢';
    }
  }
}
.typo-ol,
.typo-format ol {
  > li {
    &:before {
      content: counter(item) '.';
      counter-increment: item;
    }
  }
}

.typo-blockquote,
.typo-format blockquote {
  border-inline-start: 4px solid s-color(accent);
  background: s-color(main, background);
  padding-block: s-space(2);
  @s-radius();
}
