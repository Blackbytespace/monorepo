---
interface Props {
  schemas: {
    name: string;
    value: string;
  }[];
}

import './colorSchema.css';

const colorSchema = Astro.props.schemas;
---

<div id="color-schema" class="color-schema" transition:persist>
  <div class="_select" tabindex="0">
    {
      colorSchema?.map((schema) => (
        <div data-schema={schema.value} class={`_schema cs-${schema.value}`}>
          <div class="_default">
            <p class="_label">
              <>
                <span class="_main">{schema.name.split(' ')[0]}</span>
                <span class="_accent">
                  {schema.name.split(' ')[1] ?? schema.name}
                </span>
              </>
            </p>
          </div>
          <div class="_foreground">
            <p class="_label">
              <>
                <span class="_main">{schema.name.split(' ')[0]}</span>
                <span class="_accent">
                  {schema.name.split(' ')[1] ?? schema.name}
                </span>
              </>
            </p>
          </div>
        </div>
      ))
    }
  </div>
</div>

<script>
  import { __isDarkMode } from '@lotsof/sugar/is';

  let schema =
    localStorage.getItem('color-schema') || (__isDarkMode() ? 'dark' : 'light');

  const $colorSchema = document.getElementById('color-schema'),
    $schemas = $colorSchema?.querySelectorAll('._schema');

  for (let [i, $schema] of $schemas?.entries() ?? []) {
    $schema.addEventListener('click', () => {
      const schemaSchema = $schema.dataset.schema;
      localStorage.setItem('color-schema', schemaSchema);
      schema = schemaSchema;
      applySchema();
    });
  }

  function applySchema(): void {
    document.body.classList.forEach((c) => {
      if (c.startsWith('cs-')) {
        document.body.classList.remove(c);
      }
    });

    document.body.classList.add(`cs-${schema}`);
  }

  document.addEventListener('astro:after-swap', () => {
    applySchema();
  });
  applySchema();

  // $select.addEventListener('change', (e: any) => {
  //   localStorage.setItem('color-schema', e.target?.value as string);
  //   schema = e.target.value;
  //   applySchema();
  // });
</script>
